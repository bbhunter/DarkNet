@model Darknet.Models.UserCredentialsModel
@{
    ViewData["Title"] = "Login";
}

<h2>User</h2>
<h4>Login</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @if (TempData["LoginFailure"] != null)
        {
            <p class="alert alert-danger">@TempData["LoginFailure"]</p>
        }

        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Username" class="control-label"></label>
                <input asp-for="Username" class="form-control" autofocus="autofocus" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Login" class="btn btn-default btn-success" />
                <a asp-action="RegisterUser" class="btn btn-info">Register</a>
            </div>
            @Html.Hidden("returnUrl", Context.Request.Query["returnUrl"])
        </form>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}  